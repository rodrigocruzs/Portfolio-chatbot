"""empty message

Revision ID: 0015b0244067
Revises: 
Create Date: 2023-08-18 15:45:26.489366

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '0015b0244067'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('bank_account',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('account_name', sa.String(length=255), nullable=True),
    sa.Column('account_mask', sa.String(length=255), nullable=True),
    sa.Column('account_type', sa.String(length=255), nullable=True),
    sa.Column('account_subtype', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['customer.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('plaid_item',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('access_token', sa.String(length=255), nullable=False),
    sa.Column('item_id', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['customer.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('item_billed_products',
    sa.Column('item_id', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('product', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['item_id'], ['item.item_id'], name='item_billed_products_item_id_fkey')
    )
    op.create_table('item_available_products',
    sa.Column('item_id', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('product', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['item_id'], ['item.item_id'], name='item_available_products_item_id_fkey')
    )
    op.create_table('holdings',
    sa.Column('account_id', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('cost_basis', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('institution_price', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('institution_price_as_of', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('institution_price_datetime', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('institution_value', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('iso_currency_code', sa.VARCHAR(length=10), autoincrement=False, nullable=True),
    sa.Column('quantity', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('security_id', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('unofficial_currency_code', sa.VARCHAR(length=10), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['account_id'], ['accounts.account_id'], name='holdings_account_id_fkey')
    )
    op.create_table('item',
    sa.Column('item_id', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('consent_expiration_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('error', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('institution_id', sa.VARCHAR(length=10), autoincrement=False, nullable=True),
    sa.Column('update_type', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('webhook', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('item_id', name='item_pkey')
    )
    op.create_table('accounts',
    sa.Column('account_id', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('available_balance', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('current_balance', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('iso_currency_code', sa.VARCHAR(length=10), autoincrement=False, nullable=True),
    sa.Column('limit', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('unofficial_currency_code', sa.VARCHAR(length=10), autoincrement=False, nullable=True),
    sa.Column('mask', sa.VARCHAR(length=10), autoincrement=False, nullable=True),
    sa.Column('name', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('official_name', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('subtype', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('type', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('account_id', name='accounts_pkey')
    )
    op.create_table('securities',
    sa.Column('security_id', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('close_price', sa.NUMERIC(), autoincrement=False, nullable=True),
    sa.Column('close_price_as_of', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('cusip', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('institution_id', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('institution_security_id', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('is_cash_equivalent', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('isin', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('iso_currency_code', sa.VARCHAR(length=10), autoincrement=False, nullable=True),
    sa.Column('name', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('proxy_security_id', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('sedol', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('ticker_symbol', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('type', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('unofficial_currency_code', sa.VARCHAR(length=10), autoincrement=False, nullable=True),
    sa.Column('update_datetime', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('security_id', name='securities_pkey')
    )
    op.drop_table('plaid_item')
    op.drop_table('bank_account')
    # ### end Alembic commands ###
